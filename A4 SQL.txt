Jacob Swineford

-- 1
create view view_product_order_Swineford as
select od.productid, count(*) [Total Number of Orders]
from orders o join [Order Details] od on od.orderid = o.orderid
group by od.productid

select * from view_product_order_Swineford order by productid

-- 2
create proc sp_product_order_quantity_Swineford @pid int, @quantity int out as
begin
	select @quantity = count(od.productid) 
	from orders o join [Order Details] od on od.orderid = o.orderid
	where od.productid = @pid
end

declare @q int
exec sp_product_order_quantity_Swineford 1, @q out
print @q

-- 3 had to create a function?
create function sp_product_order_city_Swineford(@pname varchar(30)) returns table as
return select top 5 c.city City, count(*) [Number of Orders], p.ProductName
from products p join [order details] od on p.productid = od.productid join orders o on o.orderid = od.orderid join customers c on c.customerid = o.customerid
group by c.city, p.ProductName
having p.ProductName = @pname
order by count(*) desc

select * from dbo.sp_product_order_city_Swineford('Chang')

-- 4 - this will not work if you delete the city with id of 3, use on delete set null instead
create table citySwineford (
	cityid int primary key,
	city varchar(20)
)

create table peopleswineford (
	id int primary key,
	name varchar(30),
	cityid int default 3 foreign key references citySwineford(cityid) on delete set default
)

insert into citySwineford values (1, 'Seattle'), (2, 'Green Bay'), (3, 'Madison')
insert into peopleSwineford values (1, 'Aaron Rodgers', 2), (2, 'Russell Wilson', 1), (3, 'Jody Nelson', 2)

select * from citySwineford
select * from peopleSwineford

delete from citySwineford where cityid = 2

select * from citySwineford
select * from peopleSwineford

drop table peopleSwineford
drop table citySwineford

-- 5
select * from employees where datepart(mm, birthdate) = 2

create proc sp_birthday_employees_Swineford as
begin
	create table birthday_employees_swineford ( -- not nicely designed
		EmployeeID int primary key,
		LastName varchar(20),
		FirstName varchar(20),
		BirthDate date
	)
	insert into birthday_employees_swineford(EmployeeID, lastname, firstname, birthdate) 
	select EmployeeID, lastName, firstName, birthDate from employees where datepart(mm, birthdate) = 2
end

exec sp_birthday_employees_Swineford
select * from birthday_employees_swineford
drop table birthday_employees_swineford

-- 6
-- you can use a subquery to test to see if all the records of one table exist in the second table:
-- select ... from table1 where ... in (select ... from table2)
-- duplicate records could also be found by using Row_number.
-- if the tables have the same data but different row amounts, then either one table has more data inserted or
-- a duplicate exists in the bigger table. you then follow the procedure for weeding out duplicates